- name: Deploy Apache Container with Docker Network
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    container_name: apache_web
    network_name: apache_network
    network_subnet: 172.168.10.0/30
    container_ip: 172.168.10.2
    host_port: 8080
    container_port: 80
    apache_image: httpd:latest
    html_content: |
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Apache Container Deployment | DevOps Automation Platform</title>
          <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
          <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
          <style>
              * {
                  margin: 0;
                  padding: 0;
                  box-sizing: border-box;
              }
              
              body {
                  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
                  background: #0f0f23;
                  color: #ffffff;
                  min-height: 100vh;
                  overflow-x: hidden;
                  position: relative;
              }
              
              /* Animated Background */
              body::before {
                  content: '';
                  position: fixed;
                  top: 0;
                  left: 0;
                  right: 0;
                  bottom: 0;
                  background: 
                      radial-gradient(circle at 20% 50%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
                      radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),
                      radial-gradient(circle at 40% 80%, rgba(120, 219, 255, 0.3) 0%, transparent 50%);
                  z-index: -1;
              }
              
              .stars {
                  position: fixed;
                  top: 0;
                  left: 0;
                  right: 0;
                  bottom: 0;
                  background: transparent;
                  z-index: -1;
              }
              
              .star {
                  position: absolute;
                  background: #ffffff;
                  border-radius: 50%;
                  animation: twinkle 3s infinite;
              }
              
              @keyframes twinkle {
                  0%, 100% { opacity: 0.3; }
                  50% { opacity: 1; }
              }
              
              .container {
                  max-width: 1200px;
                  margin: 0 auto;
                  padding: 2rem;
                  position: relative;
                  z-index: 1;
              }
              
              .header {
                  text-align: center;
                  margin-bottom: 3rem;
                  position: relative;
              }
              
              .logo-container {
                  position: relative;
                  display: inline-block;
                  margin-bottom: 2rem;
              }
              
              .logo {
                  width: 120px;
                  height: 120px;
                  background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4);
                  background-size: 300% 300%;
                  border-radius: 50%;
                  display: flex;
                  align-items: center;
                  justify-content: center;
                  font-size: 3rem;
                  color: white;
                  box-shadow: 
                      0 0 30px rgba(255, 107, 107, 0.4),
                      0 0 60px rgba(78, 205, 196, 0.3),
                      0 0 90px rgba(69, 183, 209, 0.2);
                  animation: gradientShift 3s ease infinite;
                  position: relative;
              }
              
              @keyframes gradientShift {
                  0% { background-position: 0% 50%; }
                  50% { background-position: 100% 50%; }
                  100% { background-position: 0% 50%; }
              }
              
              .logo::after {
                  content: '';
                  position: absolute;
                  top: -5px;
                  left: -5px;
                  right: -5px;
                  bottom: -5px;
                  background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4);
                  background-size: 300% 300%;
                  border-radius: 50%;
                  z-index: -1;
                  filter: blur(10px);
                  animation: gradientShift 3s ease infinite;
              }
              
              h1 {
                  font-size: 3.5rem;
                  font-weight: 800;
                  background: linear-gradient(135deg, #667eea, #764ba2, #ff9a9e);
                  background-size: 200% 200%;
                  -webkit-background-clip: text;
                  -webkit-text-fill-color: transparent;
                  background-clip: text;
                  margin-bottom: 1rem;
                  animation: textGlow 4s ease infinite;
              }
              
              @keyframes textGlow {
                  0%, 100% { background-position: 0% 50%; }
                  50% { background-position: 100% 50%; }
              }
              
              .subtitle {
                  font-size: 1.4rem;
                  color: rgba(255, 255, 255, 0.8);
                  margin-bottom: 2rem;
                  font-weight: 400;
              }
              
              .status-banner {
                  display: inline-flex;
                  align-items: center;
                  background: linear-gradient(45deg, #00d4aa, #00d4ff);
                  padding: 1rem 2rem;
                  border-radius: 50px;
                  font-size: 1.1rem;
                  font-weight: 600;
                  box-shadow: 0 10px 30px rgba(0, 212, 170, 0.3);
                  animation: pulse 2s infinite;
              }
              
              @keyframes pulse {
                  0% { transform: scale(1); }
                  50% { transform: scale(1.05); }
                  100% { transform: scale(1); }
              }
              
              .status-banner i {
                  margin-right: 0.5rem;
                  font-size: 1.3rem;
              }
              
              .dashboard {
                  display: grid;
                  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
                  gap: 2rem;
                  margin-bottom: 3rem;
              }
              
              .card {
                  background: rgba(255, 255, 255, 0.1);
                  backdrop-filter: blur(20px);
                  border: 1px solid rgba(255, 255, 255, 0.2);
                  border-radius: 20px;
                  padding: 2rem;
                  position: relative;
                  overflow: hidden;
                  transition: all 0.3s ease;
              }
              
              .card:hover {
                  transform: translateY(-5px);
                  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
                  border-color: rgba(255, 255, 255, 0.4);
              }
              
              .card::before {
                  content: '';
                  position: absolute;
                  top: -2px;
                  left: -2px;
                  right: -2px;
                  bottom: -2px;
                  background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4);
                  background-size: 300% 300%;
                  border-radius: 20px;
                  z-index: -1;
                  animation: gradientShift 3s ease infinite;
                  opacity: 0.5;
              }
              
              .card-header {
                  display: flex;
                  align-items: center;
                  margin-bottom: 1.5rem;
              }
              
              .card-icon {
                  width: 50px;
                  height: 50px;
                  border-radius: 12px;
                  display: flex;
                  align-items: center;
                  justify-content: center;
                  margin-right: 1rem;
                  font-size: 1.5rem;
                  color: white;
              }
              
              .status-card .card-icon {
                  background: linear-gradient(45deg, #00d4aa, #00d4ff);
              }
              
              .network-card .card-icon {
                  background: linear-gradient(45deg, #ff9a9e, #fecfef);
              }
              
              .container-card .card-icon {
                  background: linear-gradient(45deg, #667eea, #764ba2);
              }
              
              .card-title {
                  font-size: 1.3rem;
                  font-weight: 600;
                  color: white;
              }
              
              .card-content {
                  color: rgba(255, 255, 255, 0.9);
              }
              
              .metric {
                  display: flex;
                  justify-content: space-between;
                  align-items: center;
                  padding: 0.8rem 0;
                  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
              }
              
              .metric:last-child {
                  border-bottom: none;
              }
              
              .metric-label {
                  font-weight: 500;
                  color: rgba(255, 255, 255, 0.8);
              }
              
              .metric-value {
                  font-family: 'Monaco', 'Courier New', monospace;
                  background: rgba(255, 255, 255, 0.1);
                  padding: 0.3rem 0.8rem;
                  border-radius: 8px;
                  font-size: 0.9rem;
                  color: #4ecdc4;
                  font-weight: 600;
              }
              
              .tech-showcase {
                  display: flex;
                  justify-content: center;
                  gap: 1.5rem;
                  flex-wrap: wrap;
                  margin-top: 2rem;
              }
              
              .tech-badge {
                  display: flex;
                  align-items: center;
                  gap: 0.5rem;
                  background: rgba(255, 255, 255, 0.1);
                  backdrop-filter: blur(10px);
                  border: 1px solid rgba(255, 255, 255, 0.2);
                  padding: 1rem 1.5rem;
                  border-radius: 15px;
                  font-weight: 600;
                  color: white;
                  transition: all 0.3s ease;
              }
              
              .tech-badge:hover {
                  transform: translateY(-3px);
                  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
                  background: rgba(255, 255, 255, 0.2);
              }
              
              .tech-badge i {
                  font-size: 1.2rem;
                  color: #4ecdc4;
              }
              
              .footer {
                  text-align: center;
                  margin-top: 3rem;
                  padding: 2rem;
                  color: rgba(255, 255, 255, 0.6);
              }
              
              @media (max-width: 768px) {
                  .container {
                      padding: 1rem;
                  }
                  
                  h1 {
                      font-size: 2.5rem;
                  }
                  
                  .dashboard {
                      grid-template-columns: 1fr;
                      gap: 1.5rem;
                  }
                  
                  .card {
                      padding: 1.5rem;
                  }
                  
                  .tech-showcase {
                      gap: 1rem;
                  }
              }
          </style>
          <script>
              // Create animated stars
              function createStars() {
                  const starsContainer = document.createElement('div');
                  starsContainer.className = 'stars';
                  document.body.appendChild(starsContainer);
                  
                  for (let i = 0; i < 50; i++) {
                      const star = document.createElement('div');
                      star.className = 'star';
                      star.style.left = Math.random() * 100 + '%';
                      star.style.top = Math.random() * 100 + '%';
                      star.style.width = Math.random() * 3 + 1 + 'px';
                      star.style.height = star.style.width;
                      star.style.animationDelay = Math.random() * 3 + 's';
                      starsContainer.appendChild(star);
                  }
              }
              
              document.addEventListener('DOMContentLoaded', createStars);
          </script>
      </head>
      <body>
          <div class="container">
              <div class="header">
                  <div class="logo-container">
                      <div class="logo">
                          <i class="fas fa-rocket"></i>
                      </div>
                  </div>
                  <h1>DevOps Automation Platform</h1>
                  <p class="subtitle">Apache Container Successfully Deployed with Enterprise-Grade Automation</p>
                  <div class="status-banner">
                      <i class="fas fa-check-circle"></i>
                      Deployment Complete & Running
                  </div>
              </div>
              
              <div class="dashboard">
                  <div class="card status-card">
                      <div class="card-header">
                          <div class="card-icon">
                              <i class="fas fa-server"></i>
                          </div>
                          <div class="card-title">Container Status</div>
                      </div>
                      <div class="card-content">
                          <div class="metric">
                              <span class="metric-label">Service Status</span>
                              <span class="metric-value">Active & Running</span>
                          </div>
                          <div class="metric">
                              <span class="metric-label">Container Name</span>
                              <span class="metric-value">{{ container_name }}</span>
                          </div>
                          <div class="metric">
                              <span class="metric-label">Access Port</span>
                              <span class="metric-value">{{ host_port }}</span>
                          </div>
                      </div>
                  </div>
                  
                  <div class="card network-card">
                      <div class="card-header">
                          <div class="card-icon">
                              <i class="fas fa-network-wired"></i>
                          </div>
                          <div class="card-title">Network Configuration</div>
                      </div>
                      <div class="card-content">
                          <div class="metric">
                              <span class="metric-label">Docker Network</span>
                              <span class="metric-value">{{ network_name }}</span>
                          </div>
                          <div class="metric">
                              <span class="metric-label">Subnet Range</span>
                              <span class="metric-value">{{ network_subnet }}</span>
                          </div>
                          <div class="metric">
                              <span class="metric-label">Container IP</span>
                              <span class="metric-value">{{ container_ip }}</span>
                          </div>
                      </div>
                  </div>
                  
                  <div class="card container-card">
                      <div class="card-header">
                          <div class="card-icon">
                              <i class="fas fa-cube"></i>
                          </div>
                          <div class="card-title">Container Details</div>
                      </div>
                      <div class="card-content">
                          <div class="metric">
                              <span class="metric-label">Image</span>
                              <span class="metric-value">httpd:latest</span>
                          </div>
                          <div class="metric">
                              <span class="metric-label">Port Mapping</span>
                              <span class="metric-value">{{ host_port }}:{{ container_port }}</span>
                          </div>
                          <div class="metric">
                              <span class="metric-label">Restart Policy</span>
                              <span class="metric-value">Always</span>
                          </div>
                      </div>
                  </div>
              </div>
              
              <div class="tech-showcase">
                  <div class="tech-badge">
                      <i class="fab fa-docker"></i>
                      Docker Containers
                  </div>
                  <div class="tech-badge">
                      <i class="fas fa-cogs"></i>
                      Ansible Automation
                  </div>
                  <div class="tech-badge">
                      <i class="fas fa-globe"></i>
                      Apache HTTP Server
                  </div>
                  <div class="tech-badge">
                      <i class="fas fa-cloud"></i>
                      DevOps Pipeline
                  </div>
              </div>
              
              <div class="footer">
                  <p>Automated deployment completed successfully using modern DevOps practices</p>
              </div>
          </div>
      </body>
      </html>

  tasks:
    - name: Check if Docker is running
      community.docker.docker_host_info:
        docker_host: "{{ docker_host | default('unix:///var/run/docker.sock') }}"
      register: docker_info
      failed_when: false

    - name: Display Docker connection troubleshooting info if failed
      debug:
        msg: |
          Docker connection failed. Try these solutions:
          1. Start Docker: sudo systemctl start docker
          2. Add user to docker group: sudo usermod -aG docker $USER && newgrp docker
          3. Check socket permissions: ls -la /var/run/docker.sock
          4. Test Docker: docker ps
          5. Set environment: export DOCKER_HOST=unix:///var/run/docker.sock
      when: docker_info.failed

    - name: Fail if Docker is not available
      fail:
        msg: |
          Docker is not running or not accessible. 
          Please run the troubleshooting steps shown above.
          Common fixes:
          - sudo systemctl start docker
          - sudo usermod -aG docker $USER && newgrp docker
          - docker ps (to test access)
      when: docker_info.failed

    - name: Pull Apache (httpd) Docker image
      community.docker.docker_image:
        name: "{{ apache_image }}"
        source: pull
        state: present
        docker_host: "{{ docker_host | default('unix:///var/run/docker.sock') }}"
      register: image_pull_result

    - name: Display image pull status
      debug:
        msg: "Apache image pull status: {{ image_pull_result.changed | ternary('Downloaded new image', 'Image already exists') }}"

    - name: Create Docker bridge network
      community.docker.docker_network:
        name: "{{ network_name }}"
        driver: bridge
        ipam_config:
          - subnet: "{{ network_subnet }}"
            gateway: "172.168.10.1"
        state: present
        docker_host: "{{ docker_host | default('unix:///var/run/docker.sock') }}"
      register: network_result

    - name: Display network creation status
      debug:
        msg: "Network '{{ network_name }}' {{ network_result.changed | ternary('created', 'already exists') }}"

    - name: Stop existing Apache container if running
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ apache_image }}"
        state: stopped
        docker_host: "{{ docker_host | default('unix:///var/run/docker.sock') }}"
      ignore_errors: true

    - name: Remove existing Apache container if exists
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ apache_image }}"
        state: absent
        docker_host: "{{ docker_host | default('unix:///var/run/docker.sock') }}"
      ignore_errors: true

    - name: Create temporary directory for HTML file
      file:
        path: "/tmp/apache_html"
        state: directory
        mode: '0755'

    - name: Create temporary HTML file
      copy:
        content: "{{ html_content }}"
        dest: "/tmp/apache_html/index.html"
        mode: '0644'
      register: html_file

    - name: Run Apache container
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ apache_image }}"
        state: started
        restart_policy: always
        networks:
          - name: "{{ network_name }}"
            ipv4_address: "{{ container_ip }}"
        ports:
          - "{{ host_port }}:{{ container_port }}"
        volumes:
          - "/tmp/apache_html/index.html:/usr/local/apache2/htdocs/index.html:ro"
        env:
          APACHE_LOG_LEVEL: info
        docker_host: "{{ docker_host | default('unix:///var/run/docker.sock') }}"
      register: container_result

    - name: Display container deployment status
      debug:
        msg: "Apache container '{{ container_name }}' deployed successfully at {{ container_ip }}:{{ container_port }}"

    - name: Wait for Apache to be ready
      uri:
        url: "http://localhost:{{ host_port }}"
        method: GET
        timeout: 30
      register: apache_check
      until: apache_check.status == 200
      retries: 10
      delay: 3
      ignore_errors: true

    - name: Display deployment summary
      debug:
        msg: |
          ===== Apache Container Deployment Complete =====
          Container Name: {{ container_name }}
          Image: {{ apache_image }}
          Network: {{ network_name }} ({{ network_subnet }})
          Container IP: {{ container_ip }}
          Host Port: {{ host_port }}
          Access URL: http://localhost:{{ host_port }}
          
          To verify deployment, run:
          curl http://localhost:{{ host_port }}
          
          To check container status:
          docker ps | grep {{ container_name }}
          
          To view container logs:
          docker logs {{ container_name }}

    - name: Cleanup temporary HTML directory
      file:
        path: "/tmp/apache_html"
        state: absent
