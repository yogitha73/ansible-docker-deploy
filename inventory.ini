# Ansible Inventory File
# Defines hosts and groups for the Apache container deployment

# Local host group - used for localhost deployment
[local]
localhost ansible_connection=local ansible_python_interpreter=python3

# Docker hosts group (for future multi-host deployments)
[docker_hosts]
localhost ansible_connection=local

# Web servers group (logical grouping)
[web_servers]
localhost ansible_connection=local

# All hosts variables
[all:vars]
# Python interpreter path
ansible_python_interpreter=python3

# Container configuration variables
container_name=apache_web
network_name=apache_network
network_subnet=172.168.10.0/30
container_ip=172.168.10.2
host_port=8080
container_port=80
apache_image=httpd:latest

# Deployment environment
deployment_env=development

# Local host specific variables
[local:vars]
# Override any local-specific settings here
# docker_host=unix:///var/run/docker.sock

# Docker hosts variables
[docker_hosts:vars]
# Docker daemon settings
docker_api_version=auto
docker_timeout=60

# Web servers variables
[web_servers:vars]
# Web server specific configuration
web_root=/usr/local/apache2/htdocs
index_file=index.html
server_admin=admin@localhost

# Development environment variables
[development:children]
local

[development:vars]
# Development-specific overrides
debug_mode=true
log_level=debug

# Example staging environment (commented out)
# [staging]
# staging-server ansible_host=staging.example.com ansible_user=deploy

# [staging:vars]
# deployment_env=staging
# container_name=apache_web_staging
# host_port=8081

# Example production environment (commented out)
# [production]
# prod-server-1 ansible_host=prod1.example.com ansible_user=deploy
# prod-server-2 ansible_host=prod2.example.com ansible_user=deploy

# [production:vars]
# deployment_env=production
# container_name=apache_web_prod
# host_port=80
# restart_policy=unless-stopped

# Load balancer group (for future use)
# [load_balancers]
# lb-server ansible_host=lb.example.com ansible_user=deploy

# Database group (if needed for expanded deployments)
# [databases]
# db-server ansible_host=db.example.com ansible_user=deploy

# Monitoring group (for future monitoring setup)
# [monitoring]
# monitor-server ansible_host=monitor.example.com ansible_user=deploy

# Group of groups for different environments
# [staging:children]
# web_servers
# load_balancers

# [production:children]
# web_servers
# load_balancers
# databases
# monitoring
